import { useState } from "react";
import { useClicker } from "../lib/stores/useClicker";

// –¢–∏–ø –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
type TabType = "info" | "inventory" | "skills";

const Profile = () => {
  const { 
    selectedClass, level, experience, 
    totalClicks, prestige, 
    inventory, skillPoints, skills, upgradeSkill,
    resetGame
  } = useClicker();
  
  const [activeTab, setActiveTab] = useState<TabType>("info");
  const [showResetConfirm, setShowResetConfirm] = useState(false);
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∫–ª–∞—Å—Å–∞
  const getClassName = (): string => {
    switch (selectedClass) {
      case "warrior": return "–í–æ–∏–Ω";
      case "explorer": return "–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å";
      case "merchant": return "–¢–æ—Ä–≥–æ–≤–µ—Ü";
      default: return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
    }
  };
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–∫–æ–Ω–∫—É –∫–ª–∞—Å—Å–∞
  const getClassIcon = (): string => {
    switch (selectedClass) {
      case "warrior": return "‚öîÔ∏è";
      case "explorer": return "üß≠";
      case "merchant": return "üí∞";
      default: return "‚ùì";
    }
  };
  
  // –†–∞—Å—á–µ—Ç –æ–ø—ã—Ç–∞ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
  const nextLevelExp = level * 100;
  const expProgress = Math.min((experience / nextLevelExp) * 100, 100);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–±—Ä–æ—Å–∞ –∏–≥—Ä—ã
  const handleResetGame = () => {
    if (showResetConfirm) {
      resetGame();
      window.location.reload(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    } else {
      setShowResetConfirm(true);
    }
  };
  
  return (
    <div className="space-y-4">
      <h2 className="text-xl font-bold text-center mb-4">–ü—Ä–æ—Ñ–∏–ª—å</h2>
      
      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –≤–∫–ª–∞–¥–∫–∞–º */}
      <div className="flex rounded-lg overflow-hidden border border-border mb-4">
        <button
          onClick={() => setActiveTab("info")}
          className={`flex-1 py-2 px-4 text-sm font-medium ${
            activeTab === "info" ? "tab-active" : "tab-inactive"
          }`}
        >
          –ò–Ω—Ñ–æ
        </button>
        <button
          onClick={() => setActiveTab("inventory")}
          className={`flex-1 py-2 px-4 text-sm font-medium ${
            activeTab === "inventory" ? "tab-active" : "tab-inactive"
          }`}
        >
          –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å
        </button>
        <button
          onClick={() => setActiveTab("skills")}
          className={`flex-1 py-2 px-4 text-sm font-medium ${
            activeTab === "skills" ? "tab-active" : "tab-inactive"
          }`}
        >
          –ù–∞–≤—ã–∫–∏
        </button>
      </div>
      
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∏–≥—Ä–æ–∫–µ */}
      {activeTab === "info" && (
        <div className="space-y-4">
          <div className="card">
            <div className="flex items-center gap-3">
              <div className="flex items-center justify-center w-14 h-14 bg-muted rounded-full">
                <span className="text-2xl">{getClassIcon()}</span>
              </div>
              <div>
                <h3 className="font-semibold text-lg">–ö–ª–∞—Å—Å: {getClassName()}</h3>
                <p className="text-sm text-muted-foreground">–£—Ä–æ–≤–µ–Ω—å {level}</p>
              </div>
            </div>
            
            {/* –ü—Ä–æ–≥—Ä–µ—Å—Å —É—Ä–æ–≤–Ω—è */}
            <div className="mt-4">
              <div className="flex justify-between text-sm mb-1">
                <span>–û–ø—ã—Ç</span>
                <span>{experience}/{nextLevelExp}</span>
              </div>
              <div className="h-2 bg-muted rounded-full overflow-hidden">
                <div
                  className="h-full bg-primary"
                  style={{ width: `${expProgress}%` }}
                ></div>
              </div>
            </div>
          </div>
          
          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
          <div className="card">
            <h3 className="font-semibold mb-3">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
            <div className="space-y-2">
              <div className="flex justify-between">
                <span className="text-sm">–í—Å–µ–≥–æ –∫–ª–∏–∫–æ–≤:</span>
                <span className="font-medium">{totalClicks.toLocaleString()}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-sm">–ü—Ä–µ—Å—Ç–∏–∂:</span>
                <span className="font-medium">{prestige}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-sm">–ê—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤:</span>
                <span className="font-medium">{inventory.artifacts.length}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-sm">–†–µ–ª–∏–∫–≤–∏–π:</span>
                <span className="font-medium">{inventory.relics.length}</span>
              </div>
            </div>
          </div>
          
          {/* –°–±—Ä–æ—Å –∏–≥—Ä—ã */}
          <div className="card">
            <h3 className="font-semibold mb-3 text-secondary">–û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞</h3>
            <button
              onClick={handleResetGame}
              className="button w-full bg-secondary text-white hover:bg-secondary-foreground"
            >
              {showResetConfirm ? "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–±—Ä–æ—Å –∏–≥—Ä—ã" : "–°–±—Ä–æ—Å–∏—Ç—å –∏–≥—Ä—É"}
            </button>
            {showResetConfirm && (
              <p className="text-xs text-secondary mt-2 text-center">
                –í–Ω–∏–º–∞–Ω–∏–µ! –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã. –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.
              </p>
            )}
          </div>
        </div>
      )}
      
      {/* –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å */}
      {activeTab === "inventory" && (
        <div className="space-y-4">
          {/* –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã */}
          <div className="card">
            <h3 className="font-semibold mb-3">–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã ({inventory.artifacts.length})</h3>
            {inventory.artifacts.length > 0 ? (
              <div className="grid grid-cols-2 gap-2">
                {inventory.artifacts.map((artifact, index) => (
                  <div 
                    key={index} 
                    className={`card ${artifact.rarityClass} flex items-center gap-2`}
                  >
                    <div className="text-2xl">{artifact.icon}</div>
                    <div>
                      <h4 className={`text-sm font-medium ${artifact.textClass}`}>{artifact.name}</h4>
                      <p className="text-xs text-muted-foreground">{artifact.shortDescription || artifact.description}</p>
                    </div>
                  </div>
                ))}
              </div>
            ) : (
              <div className="text-center text-muted-foreground py-6">
                <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤</p>
                <p className="text-xs mt-1">–ò—Ö –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ —Å—É–Ω–¥—É–∫–∞—Ö –∏–ª–∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏—è—Ö</p>
              </div>
            )}
          </div>
          
          {/* –†–µ–ª–∏–∫–≤–∏–∏ */}
          <div className="card">
            <h3 className="font-semibold mb-3">–†–µ–ª–∏–∫–≤–∏–∏ ({inventory.relics.length})</h3>
            {inventory.relics.length > 0 ? (
              <div className="space-y-2">
                {inventory.relics.map((relic, index) => (
                  <div 
                    key={index} 
                    className={`card ${relic.rarityClass}`}
                  >
                    <div className="flex items-center gap-3">
                      <div className="text-2xl">{relic.icon}</div>
                      <div>
                        <h4 className={`font-medium ${relic.textClass}`}>{relic.name}</h4>
                        <p className="text-xs text-muted-foreground">{relic.description}</p>
                      </div>
                    </div>
                    <div className="mt-2 text-sm">
                      <h5 className="font-medium mb-1">–°–≤–æ–π—Å—Ç–≤–∞:</h5>
                      <ul className="space-y-1 text-xs">
                        {relic.effects.map((effect, idx) => (
                          <li key={idx} className="flex items-center gap-1">
                            <span className="text-primary">‚Ä¢</span>
                            <span>{effect}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                  </div>
                ))}
              </div>
            ) : (
              <div className="text-center text-muted-foreground py-6">
                <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ä–µ–ª–∏–∫–≤–∏–π</p>
                <p className="text-xs mt-1">–ò—Ö –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ –ø–æ–¥–∑–µ–º–µ–ª—å—è—Ö –∫–∞–∂–¥—ã–µ 10 —É—Ä–æ–≤–Ω–µ–π</p>
              </div>
            )}
          </div>
          
          {/* –°–∫–∏–Ω—ã */}
          <div className="card">
            <h3 className="font-semibold mb-3">–°–∫–∏–Ω—ã ({inventory.skins.length})</h3>
            {inventory.skins.length > 0 ? (
              <div className="grid grid-cols-2 gap-2">
                {inventory.skins.map((skin, index) => (
                  <div 
                    key={index} 
                    className={`card ${skin.rarityClass} flex items-center gap-2`}
                  >
                    <div className="text-2xl">{skin.icon}</div>
                    <div>
                      <h4 className={`text-sm font-medium ${skin.textClass}`}>{skin.name}</h4>
                      <p className="text-xs text-muted-foreground">{skin.shortDescription || skin.description}</p>
                    </div>
                  </div>
                ))}
              </div>
            ) : (
              <div className="text-center text-muted-foreground py-6">
                <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–∫–∏–Ω–æ–≤</p>
                <p className="text-xs mt-1">–ò—Ö –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ —Å—É–Ω–¥—É–∫–∞—Ö</p>
              </div>
            )}
          </div>
        </div>
      )}
      
      {/* –ù–∞–≤—ã–∫–∏ */}
      {activeTab === "skills" && (
        <div className="space-y-4">
          <div className="card">
            <div className="flex justify-between items-center">
              <h3 className="font-semibold">–û—á–∫–∏ –Ω–∞–≤—ã–∫–æ–≤</h3>
              <span className="font-bold text-primary">{skillPoints}</span>
            </div>
            <p className="text-xs text-muted-foreground mt-1">
              –û—á–∫–∏ –Ω–∞–≤—ã–∫–æ–≤ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è
            </p>
          </div>
          
          {/* –°–ø–∏—Å–æ–∫ –Ω–∞–≤—ã–∫–æ–≤ */}
          <div className="space-y-3">
            {Object.entries(skills).map(([skillId, skill]) => (
              <div key={skillId} className="card">
                <div className="flex justify-between items-start">
                  <div>
                    <div className="flex items-center gap-2">
                      <span className="text-lg">{skill.icon}</span>
                      <h4 className="font-medium">{skill.name}</h4>
                    </div>
                    <p className="text-xs text-muted-foreground mt-1">
                      {skill.description}
                    </p>
                    <div className="flex items-center gap-2 mt-2">
                      <span className="text-xs">–£—Ä–æ–≤–µ–Ω—å: {skill.level}/{skill.maxLevel}</span>
                      <div className="h-1.5 bg-muted rounded-full overflow-hidden w-20">
                        <div
                          className="h-full bg-primary"
                          style={{ width: `${(skill.level / skill.maxLevel) * 100}%` }}
                        ></div>
                      </div>
                    </div>
                  </div>
                  <button
                    onClick={() => upgradeSkill(skillId)}
                    disabled={skillPoints <= 0 || skill.level >= skill.maxLevel}
                    className={`button ${
                      skillPoints > 0 && skill.level < skill.maxLevel
                        ? "button-primary"
                        : "button-outline opacity-50"
                    }`}
                  >
                    –£–ª—É—á—à–∏—Ç—å
                  </button>
                </div>
                
                <div className="mt-3 text-xs">
                  <span className="font-medium">–¢–µ–∫—É—â–∏–π –±–æ–Ω—É—Å: </span>
                  <span>{skill.getCurrentBonus()}</span>
                </div>
                
                {skill.level < skill.maxLevel && (
                  <div className="mt-1 text-xs text-primary">
                    <span className="font-medium">–°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å: </span>
                    <span>{skill.getNextBonus()}</span>
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  );
};

export default Profile;
