import { useState } from "react";
import { useGame } from "../lib/stores/useGame";
import { useClicker } from "../lib/stores/useClicker";
import { useAudio } from "../lib/stores/useAudio";

type ClassType = "warrior" | "explorer" | "merchant";

interface ClassInfo {
  id: ClassType;
  name: string;
  description: string;
  bonuses: string[];
  icon: string;
}

const ClassSelection = () => {
  const { start } = useGame();
  const { selectClass } = useClicker();
  const { playSuccess, toggleMute, isMuted } = useAudio();
  const [selectedClassId, setSelectedClassId] = useState<ClassType | null>(null);

  // –î–∞–Ω–Ω—ã–µ –æ –∫–ª–∞—Å—Å–∞—Ö
  const classes: ClassInfo[] = [
    {
      id: "warrior",
      name: "–í–æ–∏–Ω",
      description: "–ú–∞—Å—Ç–µ—Ä —Å–∏–ª—ã –∏ –±–æ–µ–≤—ã—Ö –∏—Å–∫—É—Å—Å—Ç–≤",
      bonuses: [
        "+25% –∫ —Å–∏–ª–µ –∫–ª–∏–∫–∞",
        "+10% –∫ —É—Ä–æ–Ω—É –≤ –ø–æ–¥–∑–µ–º–µ–ª—å—è—Ö",
        "–ù–∞—á–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å: +5 –∫ —Å–∏–ª–µ –∫–ª–∏–∫–∞"
      ],
      icon: "‚öîÔ∏è"
    },
    {
      id: "explorer",
      name: "–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å",
      description: "–õ—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π –∏—Å–∫–∞—Ç–µ–ª—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π",
      bonuses: [
        "-20% –∫ –≤—Ä–µ–º–µ–Ω–∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π",
        "+15% –∫ –Ω–∞–≥—Ä–∞–¥–µ –∑–∞ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏",
        "–ù–∞—á–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å: –û—Ç–∫—Ä—ã—Ç–∞ –ø–µ—Ä–≤–∞—è —ç–∫—Å–ø–µ–¥–∏—Ü–∏—è"
      ],
      icon: "üß≠"
    },
    {
      id: "merchant",
      name: "–¢–æ—Ä–≥–æ–≤–µ—Ü",
      description: "–û–ø—ã—Ç–Ω—ã–π –¥–µ–ª–µ—Ü –∏ –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä",
      bonuses: [
        "+10% –∫ —à–∞–Ω—Å—É —Ä–µ–¥–∫–∏—Ö –Ω–∞—Ö–æ–¥–æ–∫",
        "-15% –∫ —Ü–µ–Ω–∞–º –≤ –º–∞–≥–∞–∑–∏–Ω–µ",
        "–ù–∞—á–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å: +50 –∞–ª–º–∞–∑–æ–≤"
      ],
      icon: "üí∞"
    }
  ];

  // –í—ã–±–æ—Ä –∫–ª–∞—Å—Å–∞
  const handleClassSelect = (classId: ClassType) => {
    setSelectedClassId(classId);
  };

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –∫–ª–∞—Å—Å–∞
  const confirmClassSelection = () => {
    if (selectedClassId) {
      selectClass(selectedClassId);
      playSuccess();
      start();
    }
  };

  return (
    <div className="flex flex-col h-full items-center justify-center p-4 bg-background">
      <div className="w-full max-w-md mx-auto">
        <h1 className="text-3xl font-bold text-center mb-6">–í–µ–ª–∏–∫–∏–π –ö–ª–∏–∫–µ—Ä</h1>
        
        <div className="flex justify-end mb-4">
          <button 
            onClick={toggleMute}
            className="p-2 rounded-full hover:bg-muted"
            aria-label={isMuted ? "–í–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫" : "–í—ã–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫"}
          >
            {isMuted ? "üîá" : "üîä"}
          </button>
        </div>

        <div className="card mb-6">
          <h2 className="text-xl font-semibold text-center mb-4">–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å</h2>
          
          <div className="grid gap-4">
            {classes.map((classInfo) => (
              <div
                key={classInfo.id}
                className={`card cursor-pointer transition-all ${
                  selectedClassId === classInfo.id
                    ? "border-primary border-2"
                    : "hover:border-muted-foreground"
                }`}
                onClick={() => handleClassSelect(classInfo.id)}
              >
                <div className="flex items-center gap-3">
                  <div className="text-3xl">{classInfo.icon}</div>
                  <div>
                    <h3 className="font-bold">{classInfo.name}</h3>
                    <p className="text-sm text-muted-foreground">{classInfo.description}</p>
                  </div>
                </div>
                
                <div className="mt-3">
                  <p className="text-sm font-semibold mb-1">–ë–æ–Ω—É—Å—ã:</p>
                  <ul className="text-xs space-y-1">
                    {classInfo.bonuses.map((bonus, idx) => (
                      <li key={idx} className="flex items-center gap-1">
                        <span className="text-primary">‚Ä¢</span> {bonus}
                      </li>
                    ))}
                  </ul>
                </div>
              </div>
            ))}
          </div>
        </div>

        <button
          onClick={confirmClassSelection}
          disabled={!selectedClassId}
          className={`button button-primary w-full ${
            !selectedClassId ? "opacity-50 cursor-not-allowed" : ""
          }`}
        >
          –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
        </button>
      </div>
    </div>
  );
};

export default ClassSelection;
