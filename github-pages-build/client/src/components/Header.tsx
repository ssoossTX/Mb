import { useClicker } from "../lib/stores/useClicker";
import { useAudio } from "../lib/stores/useAudio";

const Header = () => {
  const { clicks, diamonds, prestige, clickPower, autoClickPower } = useClicker();
  const { isMuted, toggleMute } = useAudio();

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ–ª—å—à–∏—Ö —á–∏—Å–µ–ª
  const formatNumber = (num: number): string => {
    if (num >= 1000000) {
      return (num / 1000000).toFixed(1) + '–ú';
    } else if (num >= 1000) {
      return (num / 1000).toFixed(1) + '–ö';
    }
    return num.toString();
  };

  return (
    <header className="bg-card shadow-md border-b border-border">
      <div className="p-2 flex items-center justify-between">
        <div className="flex items-center gap-3">
          {/* –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã */}
          <div className="flex flex-col">
            <div className="flex items-center gap-1">
              <span className="text-sm">üëÜ</span>
              <span className="text-sm font-semibold">{formatNumber(clicks)}</span>
            </div>
            <div className="flex items-center gap-1">
              <span className="text-sm">üíé</span>
              <span className="text-sm font-semibold">{formatNumber(diamonds)}</span>
            </div>
          </div>

          {/* –ü—Ä–µ—Å—Ç–∏–∂ —É—Ä–æ–≤–µ–Ω—å */}
          <div className="px-2 py-1 bg-accent rounded-md">
            <span className="text-xs font-medium text-accent-foreground">
              ‚ú® {prestige}
            </span>
          </div>
        </div>

        {/* –ü—Ä–∞–≤–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ —Å —Å–∏–ª–æ–π –∫–ª–∏–∫–∞ –∏ –∑–≤—É–∫–æ–º */}
        <div className="flex items-center gap-3">
          <div className="flex flex-col items-end">
            <div className="flex items-center gap-1">
              <span className="text-xs text-muted-foreground">–ö–ª–∏–∫:</span>
              <span className="text-xs font-semibold">{clickPower}</span>
            </div>
            <div className="flex items-center gap-1">
              <span className="text-xs text-muted-foreground">–ê–≤—Ç–æ:</span>
              <span className="text-xs font-semibold">{autoClickPower}/—Å</span>
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∞ –∑–≤—É–∫–∞ */}
          <button 
            onClick={toggleMute}
            className="p-1.5 rounded-full hover:bg-muted"
            aria-label={isMuted ? "–í–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫" : "–í—ã–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫"}
          >
            {isMuted ? "üîá" : "üîä"}
          </button>
        </div>
      </div>
    </header>
  );
};

export default Header;
