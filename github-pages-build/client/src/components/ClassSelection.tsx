import { useState, useEffect } from "react";
import { useGame } from "../lib/stores/useGame";
import { useClicker } from "../lib/stores/useClicker";
import { useAudio } from "../lib/stores/useAudio";

type ClassType = "warrior" | "explorer" | "merchant";

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∞—Å—Å–∞—Ö
const classInfo = [
  {
    type: "warrior" as ClassType,
    name: "–í–æ–∏–Ω",
    icon: "‚öîÔ∏è",
    description: "–ú–∞—Å—Ç–µ—Ä —Å–∏–ª—ã –∏ –±–æ–µ–≤—ã—Ö –∏—Å–∫—É—Å—Å—Ç–≤",
    color: "bg-red-600 hover:bg-red-700",
    bonuses: [
      "+25% –∫ —Å–∏–ª–µ –∫–ª–∏–∫–∞",
      "+10% –∫ —É—Ä–æ–Ω—É –≤ –ø–æ–¥–∑–µ–º–µ–ª—å—è—Ö",
      "–ù–∞—á–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å: +5 –∫ —Å–∏–ª–µ –∫–ª–∏–∫–∞"
    ]
  },
  {
    type: "explorer" as ClassType,
    name: "–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å",
    icon: "üß≠",
    description: "–õ—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π –∏—Å–∫–∞—Ç–µ–ª—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π",
    color: "bg-blue-600 hover:bg-blue-700",
    bonuses: [
      "-20% –∫ –≤—Ä–µ–º–µ–Ω–∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π",
      "+15% –∫ –Ω–∞–≥—Ä–∞–¥–µ –∑–∞ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏",
      "–ù–∞—á–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å: –û—Ç–∫—Ä—ã—Ç–∞ –ø–µ—Ä–≤–∞—è —ç–∫—Å–ø–µ–¥–∏—Ü–∏—è"
    ]
  },
  {
    type: "merchant" as ClassType,
    name: "–¢–æ—Ä–≥–æ–≤–µ—Ü",
    icon: "üí∞",
    description: "–û–ø—ã—Ç–Ω—ã–π –¥–µ–ª–µ—Ü –∏ –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä",
    color: "bg-green-600 hover:bg-green-700",
    bonuses: [
      "+10% –∫ —à–∞–Ω—Å—É —Ä–µ–¥–∫–∏—Ö –Ω–∞—Ö–æ–¥–æ–∫",
      "-15% –∫ —Ü–µ–Ω–∞–º –≤ –º–∞–≥–∞–∑–∏–Ω–µ",
      "–ù–∞—á–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å: +50 –∞–ª–º–∞–∑–æ–≤"
    ]
  }
];

const ClassSelection = () => {
  const { phase, start } = useGame();
  const { selectClass } = useClicker();
  const { playSuccess, toggleMute, isMuted } = useAudio();
  const [currentClassIndex, setCurrentClassIndex] = useState(0);
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π –ª–æ–≥ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    console.log("ClassSelection mounted, game phase:", phase);
  }, [phase]);
  
  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –∫–ª–∞—Å—Å–∞–º
  const nextClass = () => {
    setCurrentClassIndex((prevIndex) => (prevIndex + 1) % classInfo.length);
  };
  
  const prevClass = () => {
    setCurrentClassIndex((prevIndex) => (prevIndex - 1 + classInfo.length) % classInfo.length);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –∫–ª–∞—Å—Å–∞ –∏ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
  const selectClassAndStartGame = (classType: ClassType) => {
    try {
      console.log("–ü—Ä—è–º–æ–π –≤—ã–±–æ—Ä –∫–ª–∞—Å—Å–∞:", classType);
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∞—Å—Å
      selectClass(classType);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∞—Å—Å –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
      const classSelected = useClicker.getState().selectedClass;
      const hasClassSelected = useClicker.getState().hasSelectedClass;
      console.log("–ö–ª–∞—Å—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:", classSelected);
      console.log("hasSelectedClass:", hasClassSelected);
      
      // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫
      playSuccess();
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É
      start();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–∑—É –∏–≥—Ä—ã
      console.log("–ò–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞, —Ñ–∞–∑–∞:", useGame.getState().phase);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–ª–∞—Å—Å–∞ –∏ –∑–∞–ø—É—Å–∫–µ –∏–≥—Ä—ã:", error);
    }
  };

  return (
    <div className="flex flex-col h-full items-center justify-center p-4 bg-background">
      <div className="w-full max-w-md mx-auto">
        <h1 className="text-3xl font-bold text-center mb-6">–í–µ–ª–∏–∫–∏–π –ö–ª–∏–∫–µ—Ä</h1>
        
        <div className="flex justify-end mb-4">
          <button 
            onClick={toggleMute}
            className="p-2 rounded-full hover:bg-muted"
            aria-label={isMuted ? "–í–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫" : "–í—ã–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫"}
          >
            {isMuted ? "üîá" : "üîä"}
          </button>
        </div>

        <div className="mb-6">
          <h2 className="text-xl font-semibold text-center mb-6">–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</h2>
          
          {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É –∫–ª–∞—Å—Å–∞–º–∏ */}
          <div className="flex justify-center items-center gap-4 mb-4">
            <button 
              className="p-3 rounded-full bg-muted hover:bg-muted-foreground/20 text-lg"
              onClick={prevClass}
              aria-label="–ü—Ä–µ–¥—ã–¥—É—â–∏–π –∫–ª–∞—Å—Å"
            >
              ‚óÄÔ∏è
            </button>
            
            <div className="text-center font-medium">
              {currentClassIndex + 1} / {classInfo.length}
            </div>
            
            <button 
              className="p-3 rounded-full bg-muted hover:bg-muted-foreground/20 text-lg"
              onClick={nextClass}
              aria-label="–°–ª–µ–¥—É—é—â–∏–π –∫–ª–∞—Å—Å"
            >
              ‚ñ∂Ô∏è
            </button>
          </div>
          
          {/* –¢–µ–∫—É—â–∏–π –∫–ª–∞—Å—Å */}
          <div className="card p-6 mb-4 border-2 border-primary/20 hover:border-primary transition-all">
            <div className="flex items-center gap-3 mb-4">
              <div className="text-4xl">{classInfo[currentClassIndex].icon}</div>
              <div>
                <h3 className="font-bold text-xl">{classInfo[currentClassIndex].name}</h3>
                <p className="text-muted-foreground">{classInfo[currentClassIndex].description}</p>
              </div>
            </div>
            
            <div className="mb-5">
              <p className="font-semibold mb-2">–ë–æ–Ω—É—Å—ã:</p>
              <ul className="space-y-2">
                {classInfo[currentClassIndex].bonuses.map((bonus, index) => (
                  <li key={index} className="flex items-center gap-2">
                    <span className="text-primary">‚Ä¢</span> {bonus}
                  </li>
                ))}
              </ul>
            </div>
            
            <button 
              onClick={() => selectClassAndStartGame(classInfo[currentClassIndex].type)}
              className={`w-full py-3 ${classInfo[currentClassIndex].color} text-white font-bold rounded-lg transition-colors shadow-md`}
            >
              –í—ã–±—Ä–∞—Ç—å {classInfo[currentClassIndex].name}
            </button>
          </div>
          
          {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ç–µ–∫—É—â–µ–≥–æ –∫–ª–∞—Å—Å–∞ */}
          <div className="flex justify-center gap-2 mt-4">
            {classInfo.map((_, index) => (
              <button
                key={index}
                className={`w-3 h-3 rounded-full ${
                  index === currentClassIndex ? "bg-primary" : "bg-muted"
                }`}
                onClick={() => setCurrentClassIndex(index)}
                aria-label={`–ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–ª–∞—Å—Å—É ${index + 1}`}
              />
            ))}
          </div>
        </div>

        <p className="text-center text-sm text-muted-foreground mt-4">
          –õ–∏—Å—Ç–∞–π—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥—Ä—É–≥–∏—Ö –∫–ª–∞—Å—Å–æ–≤ ‚óÄÔ∏è ‚ñ∂Ô∏è
        </p>
      </div>
    </div>
  );
};

export default ClassSelection;