import { useClicker } from "../lib/stores/useClicker";
import { useAudio } from "../lib/stores/useAudio";

const Upgrades = () => {
  const { 
    clicks, diamonds,
    clickPower, clickLevel, clickCost, upgradeClickPower,
    autoClickPower, autoClickLevel, autoClickCost, upgradeAutoClickPower,
    autoClickSpeed, autoClickSpeedLevel, autoClickSpeedCost, upgradeAutoClickSpeed,
    canAffordUpgrade
  } = useClicker();
  
  const { playSuccess } = useAudio();
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ–ª—å—à–∏—Ö —á–∏—Å–µ–ª
  const formatNumber = (num: number): string => {
    if (num >= 1000000) {
      return (num / 1000000).toFixed(1) + '–ú';
    } else if (num >= 1000) {
      return (num / 1000).toFixed(1) + '–ö';
    }
    return num.toString();
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É–ª—É—á—à–µ–Ω–∏–π
  const handleUpgradeClick = (type: string) => {
    switch (type) {
      case "click":
        if (canAffordUpgrade("click")) {
          upgradeClickPower();
          playSuccess();
        }
        break;
      case "autoClick":
        if (canAffordUpgrade("autoClick")) {
          upgradeAutoClickPower();
          playSuccess();
        }
        break;
      case "autoClickSpeed":
        if (canAffordUpgrade("autoClickSpeed")) {
          upgradeAutoClickSpeed();
          playSuccess();
        }
        break;
    }
  };

  return (
    <div className="space-y-4">
      <h2 className="text-xl font-bold text-center mb-4">–£–ª—É—á—à–µ–Ω–∏—è</h2>
      
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Å—É—Ä—Å–∞—Ö */}
      <div className="card mb-4">
        <div className="flex justify-between items-center">
          <div className="flex items-center gap-2">
            <span className="text-lg">üëÜ</span>
            <span className="font-semibold">{formatNumber(clicks)} –∫–ª–∏–∫–æ–≤</span>
          </div>
          <div className="flex items-center gap-2">
            <span className="text-lg">üíé</span>
            <span className="font-semibold">{formatNumber(diamonds)} –∞–ª–º–∞–∑–æ–≤</span>
          </div>
        </div>
      </div>
      
      {/* –£–ª—É—á—à–µ–Ω–∏–µ —Å–∏–ª—ã –∫–ª–∏–∫–∞ */}
      <div className="card">
        <div className="flex items-start justify-between">
          <div>
            <h3 className="font-semibold">–°–∏–ª–∞ –ö–ª–∏–∫–∞</h3>
            <p className="text-sm text-muted-foreground">
              –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–∫–æ–≤ –∑–∞ –æ–¥–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ
            </p>
            <div className="mt-2">
              <div className="text-sm">–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å: <span className="font-medium">{clickLevel}</span></div>
              <div className="text-sm">–°–∏–ª–∞ –∫–ª–∏–∫–∞: <span className="font-medium">{clickPower}</span></div>
              <div className="text-sm text-primary font-medium">
                –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å: +{Math.ceil(clickPower * 0.2)} –∫ —Å–∏–ª–µ –∫–ª–∏–∫–∞
              </div>
            </div>
          </div>
          <button
            onClick={() => handleUpgradeClick("click")}
            disabled={!canAffordUpgrade("click")}
            className={`button whitespace-nowrap ${
              canAffordUpgrade("click") ? "button-primary" : "button-outline opacity-50"
            }`}
          >
            –£–ª—É—á—à–∏—Ç—å
            <div className="text-xs flex items-center gap-1 mt-1">
              <span>üëÜ</span>
              <span>{formatNumber(clickCost)}</span>
            </div>
          </button>
        </div>
      </div>
      
      {/* –£–ª—É—á—à–µ–Ω–∏–µ –∞–≤—Ç–æ–∫–ª–∏–∫–∞ */}
      <div className="card">
        <div className="flex items-start justify-between">
          <div>
            <h3 className="font-semibold">–°–∏–ª–∞ –ê–≤—Ç–æ–∫–ª–∏–∫–∞</h3>
            <p className="text-sm text-muted-foreground">
              –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–∫–æ–≤, –ø–æ–ª—É—á–∞–µ–º—ã—Ö –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
            </p>
            <div className="mt-2">
              <div className="text-sm">–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å: <span className="font-medium">{autoClickLevel}</span></div>
              <div className="text-sm">–°–∏–ª–∞ –∞–≤—Ç–æ–∫–ª–∏–∫–∞: <span className="font-medium">{autoClickPower}/—Å–µ–∫</span></div>
              <div className="text-sm text-primary font-medium">
                –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å: +{Math.ceil(autoClickPower * 0.3)} –∫ –∞–≤—Ç–æ–∫–ª–∏–∫—É
              </div>
            </div>
          </div>
          <button
            onClick={() => handleUpgradeClick("autoClick")}
            disabled={!canAffordUpgrade("autoClick")}
            className={`button whitespace-nowrap ${
              canAffordUpgrade("autoClick") ? "button-primary" : "button-outline opacity-50"
            }`}
          >
            –£–ª—É—á—à–∏—Ç—å
            <div className="text-xs flex items-center gap-1 mt-1">
              <span>üëÜ</span>
              <span>{formatNumber(autoClickCost)}</span>
            </div>
          </button>
        </div>
      </div>
      
      {/* –£–ª—É—á—à–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∞–≤—Ç–æ–∫–ª–∏–∫–∞ */}
      <div className="card">
        <div className="flex items-start justify-between">
          <div>
            <h3 className="font-semibold">–°–∫–æ—Ä–æ—Å—Ç—å –ê–≤—Ç–æ–∫–ª–∏–∫–∞</h3>
            <p className="text-sm text-muted-foreground">
              –£–º–µ–Ω—å—à–∞–µ—Ç –≤—Ä–µ–º—è –º–µ–∂–¥—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –∫–ª–∏–∫–∞–º–∏
            </p>
            <div className="mt-2">
              <div className="text-sm">–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å: <span className="font-medium">{autoClickSpeedLevel}</span></div>
              <div className="text-sm">–ò–Ω—Ç–µ—Ä–≤–∞–ª: <span className="font-medium">{autoClickSpeed/1000}—Å–µ–∫</span></div>
              <div className="text-sm text-primary font-medium">
                –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å: -{Math.min(100, autoClickSpeed * 0.1)}–º—Å –∫ –∏–Ω—Ç–µ—Ä–≤–∞–ª—É
              </div>
            </div>
          </div>
          <button
            onClick={() => handleUpgradeClick("autoClickSpeed")}
            disabled={!canAffordUpgrade("autoClickSpeed")}
            className={`button whitespace-nowrap ${
              canAffordUpgrade("autoClickSpeed") ? "button-primary" : "button-outline opacity-50"
            }`}
          >
            –£–ª—É—á—à–∏—Ç—å
            <div className="text-xs flex items-center gap-1 mt-1">
              <span>üíé</span>
              <span>{formatNumber(autoClickSpeedCost)}</span>
            </div>
          </button>
        </div>
      </div>
    </div>
  );
};

export default Upgrades;
